#TODO RECODE
# similar of code here to has-attribute and attribute-of indicates same for generalization
# even name indicates all options, need to make list of all possible options when redesigning

sp {same-attribute*elaborate*results*instance*positive*single*2param
   (state <s> ^name same-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^negative false ^type <name>)
   (<args> ^1 <a1> ^2 <a2>)
   (<a1> -^rtype set ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set ^result.set.instance.{1} <objb>)
   (<obja> ^predicates <pred>)
   (<objb> ^predicates <pred2>)
   (<pred> ^<name> <x>)
   (<pred2> ^<name> <x>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^2 <objb>)
}

sp {same-attribute*elaborate*results*instance*positive*single*1param
   (state <s> ^name same-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2 ^negative false ^type <name>)
   (<args> ^1 <a1> ^2 <a2>)
   (<a1> -^rtype set ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set ^result.set.instance.{1} <objb>)
   (<obja> ^predicates <pred>)
   (<objb> ^predicates <pred2>)
   (<pred> ^<name> <x>)
   (<pred2> ^<name> <x>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}

sp {same-attribute*elaborate*results*instance*positive*set*set
   (state <s> ^name same-attribute
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 1 ^negative false ^type <name>)
   (<args> ^1 <a1> ^num 1)
   (<a1> ^rtype set ^result.set.instance.{1} <obja>)
-{(<obja> ^<o3> <obja3>)
(<obja3> ^predicates <pred3>)
(<pred3> -^<name>)} # meaning no of that attribute cant be same
  -{(<obja> ^<o1> <obja1> ^<o2> <obja2>)
  	(<obja1> ^predicates <pred>)
   (<obja2> ^predicates <pred2>)
   (<pred> ^<name> <x>)
   (<pred2> -^<name> <x>)}
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}

sp {same-attribute*elaborate*results*instance*negative
   (state <s> ^name same-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <p> ^negative true ^type <name>)
   (<args> ^1 <a1>)
   (<a1> -^rtype set ^result.set.instance.{1} <obja>)
   (<obja> ^predicates <pred>)
   (<pred> -^<name>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}

#TODO weird affect of create a same set of size one, where only one object has that attribute, might be ok
#could ad test to illiminate creating a set where there is not another result
sp {same-attribute*elaborate*results*sets
   (state <s> ^name same-attribute
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pn> ^type <name>)
   (<args> ^num 1
           ^1 <a1>)
   (<a1> -^rtype set ^result.set.instance.{1} <obj>)
   (<obj> ^predicates <pred>)
   (<pred> ^<name> <x>)
-{(<a1> ^result.set.instance.{1} <obj2> > <obj>) #to prevent duplicates
  (<obj2> ^predicates <pre2>)
  (<pre2> ^<name> <x>)}

-->
   (<s> ^instance <instance>)
   (<instance> ^1 <set2> ^2 <x>)
}
#TODO the fact that results with have 2 of attribute suggest should do it like with-attribute where gets set to argument implictly?
sp {same-attribute*elaborate*results*instance*sets*object
   (state <s> ^name same-attribute
   		  	  ^operator <op>
			  ^superstate.condition.result.set.instance <i1> #need?
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<op> ^name complete ^instance <i1>) #JAMES UNCHUNKED VERSION
   (<o> ^args <args> ^parameter <pn> ^type <name>)
   (<args> ^num 1
           ^1 <a1>)
   (<a1> -^rtype set ^result.set.instance.{1} <obj>)
   (<obj> ^predicates <pred>)
   (<pred> ^<name> <x>)
   (<i1> ^1 <set2> ^2 <x>)
-->
	(<set2> ^object <obj>)
}

sp {same-attribute*propose*complete
#:interrupt
   (state <s> ^name same-attribute
              ^instance <e>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^instance <e>)
}

sp {same-attribute*apply*complete*instance
   (state <s> ^name same-attribute
              ^operator <op>
              #^instance <o> #TODO JAMES CHECK IF NECESSARY sometimes defined sometimes not
              ^superstate.condition.result.set <res>)
   (<op> ^name complete ^instance <o>) #JAMES UNCHUNKED VERSION
-->
   (<res> ^instance <o>)
}
