
sp {soar-compare*greater
   (state <s> ^name soar-greater
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 1 ^name soar-greater) 
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.instance.{1} {<value> > <value1>}) 
   (<a2> ^result.set.instance.{1} <value1>)
-->
   (<res> ^instance <in1>)
   (<in1> ^1 <value>)
}
sp {soar-compare*greater-equal
   (state <s> ^name soar-greater-equal
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 1 ^name soar-greater-equal) 
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.instance.{1} {<value> >= <value1>}) 
   (<a2> ^result.set.instance.{1} <value1>)
-->
   (<res> ^instance <in1>)
   (<in1> ^1 <value>)
}

sp {soar-compare*greater*param-2
   (state <s> ^name soar-greater
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-greater)  
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.instance.{1} {<value> > <value1>}) 
   (<a2> ^result.set.instance.{1} <value1>)
-->
   (<res> ^instance <instance>)
   (<instance> ^1 <value> ^2 <value1>)
}


sp {soar-compare*greater-equal*param-2
   (state <s> ^name soar-greater-equal
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-greater-equal)  
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.instance.{1} {<value> >= <value1>}) 
   (<a2> ^result.set.instance.{1} <value1>)
-->
   (<res> ^instance <instance>)
   (<instance> ^1 <value> ^2 <value1>)
}

sp {soar-compare*less
   (state <s> ^name soar-less
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2 ^name soar-less) 
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.instance.{1} {<value> < <value1>}) 
   (<a2> ^result.set.instance.{1} <value1>)
-->
   (<res> ^instance <in1>)
   (<in1> ^1 <value>)
}

sp {soar-compare*less*param-2
   (state <s> ^name soar-less
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-less) 
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.instance.{1} {<value> < <value1>}) 
   (<a2> ^result.set.instance.{1} <value1>)
-->
   (<res> ^instance <instance>)
   (<instance> ^1 <value> ^2 <value1>)
}



sp {soar-compare*not-equal
   (state <s> ^name soar-not-equal
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2 ^name soar-not-equal) 
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.instance.{1} {<value> <> <value1>}) 
   (<a2> ^result.set.instance.{1} <value1>)
-->
   (<res> ^instance <in1>)
   (<in1> ^1 <value>)
}

sp {soar-compare*not-equal*param-2
   (state <s> ^name soar-not-equal
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-not-equal) 
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.instance.{1} {<value> <> <value1>}) 
   (<a2> ^result.set.instance.{1} <value1>)
-->
   (<res> ^instance <instance>)
   (<instance> ^1 <value> ^2 <value1>)
}