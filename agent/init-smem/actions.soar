#!##########################################################################
#!##########################################################################
#! Manipulation Actions
#! 001-099

### +pick-up1 [001]
# 1 Argument: Pick up the <obj>
#             Pick up the yellow block

(@pick-up1 ^handle pick-up1 ^procedural <proc001> ^item-type action)
(<proc001> ^op_name op_pick-up1 
           ^arg1 <parg0011>)
(<parg0011> ^arg-type object ^importance required ^arg-status real ^id <obj-slot0011>)


### +put-down1 [002]
# 1 Argument Version: Put down the <obj>
# 2 Argument Version: Put the <obj> <rel> <obj2>

(@put-down1 ^handle put-down1 ^procedural <proc002> ^item-type action)
(<proc002> ^op_name op_put-down1 
           ^arg1 <parg0021>
           ^arg2 <parg0022>)
(<parg0021> ^arg-type object ^importance required ^arg-status real ^id <obj-slot0021>)
(<parg0022> ^arg-type predicate ^importance optional ^arg-status desired ^id <pred-slot0022> ^2 <obj-slot0022>)


### +open1 [003]
# Open the <obj>
# Open the pantry

(@open1 ^handle open1 ^procedural <proc003> ^item-type action)
(<proc003> ^op_name op_open1 
           ^arg1 <parg0031>)
(<parg0031> ^arg-type object ^importance required ^arg-status real ^id <obj-slot0031>)


### +close1 [004]
# Close the <obj>
# Close the stove

(@close1 ^handle close1 ^procedural <proc004> ^item-type action)
(<proc004> ^op_name op_close1
           ^arg1 <parg0041>)
(<parg0041> ^arg-type object ^importance required ^arg-status real ^id <obj-slot0041>)


### +turn-on1 [005]
# Turn on the <obj>
# Turn on the lights

(@turn-on1 ^handle turn-on1 ^procedural <proc005> ^item-type action)
(<proc005> ^op_name op_turn-on1 
           ^arg1 <parg0051>)
(<parg0051> ^arg-type object ^importance required ^arg-status real ^id <obj-slot0051>)


### +turn-off1 [006]
# Turn off the <obj>
# Turn off the stove

(@turn-off1 ^handle turn-off1 ^procedural <proc006> ^item-type action)
(<proc006> ^op_name op_turn-off1 
           ^arg1 <parg0061>)
(<parg0061> ^arg-type object ^importance required ^arg-status real ^id <obj-slot0061>)

### +write1 [007]
# 2 Argument Version: write a <num> onto <obj2>
#                     Write a five onto the green location

(@write1 ^handle write1 ^procedural <proc007> ^item-type action ^goal <goal007>)
(<proc007> ^op_name op_write1
           ^arg1 <parg0071> ^arg2 <parg0072>)
(<parg0071> ^arg-type object ^importance required ^arg-status real ^id <obj-slot0071>)
(<parg0072> ^arg-type predicate ^importance required ^arg-status desired ^id <pred-slot0072> ^2 <obj-slot0072>)
(<goal007> ^predicate <gpred007>)
(<gpred007> ^type relation ^id <pred-slot0072> ^1 <obj-slot0071> ^2 <obj-slot0072>)


### +give1 [008]
# Give the <obj> to <person>.

(@give1 ^handle give1 ^procedural <proc008> ^item-type action)
(<proc008> ^op_name op_give1
          ^arg1 <parg0081> ^arg2 <parg0082>)
(<parg0081> ^arg-type object ^importance required ^arg-status real ^id <obj-slot0081>)
(<parg0082> ^arg-type predicate ^importance required ^arg-status desired ^id <pred-slot0082> ^2 <obj-slot0082>) 


### +point1 [009]
# Point at the <obj>

(@point1 ^handle point1 ^procedural <proc009> ^item-type action)
(<proc009> ^op_name op_point1
           ^arg1 <parg0091>)
(<parg0091> ^arg-type predicate ^importance required ^arg-status desired ^id <pred-slot0091> ^2 <obj-slot0091>)




#!####################################################################
#!####################################################################
#! Robot Tasks
#! 101-199

### +move1 [101]
# 2 Argument Version: Move the <obj> <rel> <obj2>
#                     Move the red block onto the green block

(@move1 ^handle move1 ^procedural <proc101> ^item-type action)
(<proc101> ^op_name op_move1
           ^arg1 <parg1011> ^arg2 <parg1012>
           ^subactions <subs101>)
(<parg1011> ^arg-type object ^importance required ^arg-status real ^id <obj-slot1011>)
(<parg1012> ^arg-type predicate ^importance required ^arg-status desired ^id <pred-slot1012> ^2 <obj-slot1012>)
#(<a101> ^goal <goal101>)
#(<goal101> ^predicate <gpred101>)
#(<gpred101> ^type relation ^id <pred-slot1012> ^1 <obj-slot1011> ^2 <obj-slot1012>)


### +store1 [102]
# Store the <obj>

(@store1 ^handle store1 ^item-type action)


### +discard1 [103]
# Discard the <obj>

(@discard1 ^handle discard1 ^item-type action)


### +deliver1 [104]
# Deliver the <obj> to the <loc>

(@deliver1 ^handle deliver1 ^item-type action)


### +fetch1 [105]
# Fetch a <obj>
# Fetch a <obj> from the <loc>

(@fetch1 ^handle fetch1 ^item-type action)


### +take1 [106]
# Take the <obj> to the <loc>

(@take1 ^handle take1 ^item-type action)


### +guide1 [107]
# Guide <person>

(@guide1 ^handle guide1 ^item-type action)


### +serve1 [108]
# Serve [person]

(@serve1 ^handle serve1 ^item-type action)


### +bring1 [109]
# Bring <obj> to the <loc>

(@bring1 ^handle bring1 ^item-type action)


### +tell1 [110]
# Tell <person> |Bob says hi|

(@tell1 ^handle tell1 ^item-type action)


### +stack1 [111]
# Stack the <obj1> and the <obj2>

(@stack1 ^handle stack1 ^item-type action)


### +cook1 [112]
# Cook the steak

(@cook1 ^handle cook1 ^item-type action)


### +set1 [113]
# Set the table
   # AM: Check this
   (@set1 ^handle set)


### +clean1 [114]
# Clean up
# Clean the table

(@clean1 ^handle clean1 ^item-type action)


### +throw1 [115]
# Throw away the object

(@throw1 ^handle throw1 ^procedural <proc115> ^item-type action)
(<proc115> ^op_name op_throw1
           ^arg1 <parg1151>)
  (<parg1151> ^arg-type object ^arg-status real ^id <obj-slot1151>)


### +organize1 [116]
# Organize the table

(@organize1 ^handle organize1 ^item-type action)



#!#############################################################################################
#!#############################################################################################
#! Driving Actions
#! 201-299

### +turn1 [201]
# Change direction, Turn [right|left|around]

(@turn1 ^handle turn1 ^procedural <proc201> ^item-type action)
(<proc201> ^op_name op_turn1 
           ^arg1 <parg2011>)
(<parg2011> ^arg-type concept ^importance required ^arg-status abstract ^id <conc-slot2011>)


### +follow-wall1 [202]
# Follow the [right|left] wall

(@follow-wall1 ^handle follow-wall1 ^procedural <proc202> ^item-type action)
(<proc202> ^op_name op_follow-wall1 
           ^arg1 <parg2021>)
(<parg2021> ^arg-type object ^importance required ^arg-status abstract ^id <conc-slot2021>)


### +orient1 [203]
# Orient [north|south|east|west]

(@orient1 ^handle orient1 ^procedural <proc203> ^item-type action)
(<proc203> ^op_name op_orient1 
           ^arg1 <parg2031>)
(<parg2031> ^arg-type concept ^importance required ^arg-status abstract ^id <conc-slot2031>)


### +face1 [204]
# Face the <obj>
# Face the door

(@face1 ^handle face1 ^procedural <proc204> ^item-type action)
(<proc204> ^op_name op_face1
           ^arg1 <parg2041>)
(<parg2041> ^arg-type object ^importance required ^arg-status real ^id <obj-slot2041>)


### +drive-forward1 [205]
# Drive forward.
# Drive.
# Drive down the hall.
   #   (@drive-forward1 ^handle drive-forward1 ^procedural <proc205> ^item-type action)
   #   (<proc205> ^op_name op_drive-forward
   #              ^arg1 <parg2051>)
   #   (<parg2051> ^arg-type concept ^importance optional ^arg-status abstract ^id <conc-slot2051>)


### +go-to1 [206]
# Go to the <loc>
# Drive to the <loc>
   (@go-to1 ^handle go-to1 ^procedural <proc206> ^item-type action)
   (<proc206> ^op_name op_go-to1 
              ^arg2 <parg2062>)
   (<parg2062> ^arg-type predicate ^importance optional ^arg-status desired ^id <pred-slot2062> ^2 <obj-slot2062>)


### +go-to-waypoint1 [207]
# Used internally, used to navigate between any 2 waypoints

(@go-to-waypoint1 ^handle go-to-waypoint1 ^procedural <proc207> ^item-type action)
(<proc207> ^op_name op_go-to-waypoint1 ^arg2 <parg2071>)
(<parg2071> ^arg-type concept ^arg-status abstract ^id <conc-slot2071>)


### +go-to-next-waypoint1 [208]
# Used internally, navigate to an adjacent waypoint (edge traversal)

(@go-to-next-waypoint1 ^handle go-to-next-waypoint1 ^procedural <proc208> ^item-type action)
(<proc208> ^op_name op_go-to-next-waypoint1 ^arg2 <parg2081>)
(<parg2081> ^arg-type concept ^arg-status abstract ^id <conc-slot2081>)


### +stop1 [209]
# Stop.

(@stop1 ^handle stop1 ^procedural <proc209> ^item-type action)
(<proc209> ^op_name op_stop1)


### +scan1 [210]
# scan the room
# Scan.
# Scan until you see the <obj>.

(@scan1 ^handle scan1 ^procedural <proc210> ^item-type action ^learn-proposal true)
(<proc210> ^op_name op_scan1)


### +explore1 [211]
# Explore.
# Explore until you see the <obj>.

(@explore1 ^handle explore1 ^procedural <proc211> ^item-type action ^learn-proposal true)
(<proc211> ^op_name op_explore1)


### +find1 [212]
# Find the <obj>

(@find1 ^handle find1 ^procedural <proc212> ^item-type action ^goal <goal212>)
(<proc212> ^op_name op_find1 
           ^arg1 <parg2121>)
   (<parg2121> ^arg-type object ^arg-status real ^importance required ^id <obj-slot2121>)

(<goal212> ^predicate <gp2121>)
   (<gp2121> ^type state ^id <pred-slot2121> ^1 <obj-slot2121>)
      (<pred-slot2121> ^default <def2121>)
      (<def2121> ^predicate-handle visible1)


### +start-leading1 [213]
# Start leading <person>

(@start-leading1 ^handle start-leading1 ^procedural <proc213> ^item-type action)
(<proc213> ^op_name op_start-leading1
           ^arg1 <parg2131>)
(<parg2131> ^arg-type object ^arg-status real ^importance required ^id <obj-slot2131>)


### +stop-leading1 [214]
# Stop leading <person>

(@stop-leading1 ^handle stop-leading1 ^procedural <proc214> ^item-type action)
(<proc214> ^op_name op_stop-leading1
           ^arg1 <parg2141>)
(<parg2141> ^arg-type object ^arg-status real ^importance required ^id <obj-slot2141>)


### +start-following1 [215]
# Start following <person>

(@start-following1 ^handle start-following1 ^procedural <proc215> ^item-type action)
(<proc215> ^op_name op_start-following1
           ^arg1 <parg2151>)
(<parg2151> ^arg-type object ^arg-status real ^importance required ^id <obj-slot2151>)


### +stop-following1 [216]
# Stop following <person>

(@stop-following1 ^handle stop-following1 ^procedural <proc216> ^item-type action)
(<proc216> ^op_name op_stop-following1
           ^arg1 <parg2161>)
(<parg2161> ^arg-type object ^arg-status real ^importance required ^id <obj-slot2161>)


### +approach1 [217]
# Approach the <obj>

(@approach1 ^handle approach1 ^procedural <proc217> ^item-type action)
(<proc217> ^op_name op_approach1 
           ^arg1 <parg2171>)
   (<parg2171> ^arg-type object ^arg-status real ^importance required ^id <obj-slot2171>)




#!#############################################################################################
#!#############################################################################################
#! Actions involving Language
#! 301-399


### +ask1 [301]
# Ask 'QUOTED MESSAGE'

(@ask1 ^handle ask1 ^procedural <proc301> ^item-type action ^learn-proposal true ^perform once)
(<proc301> ^op_name op_ask1
          ^arg1 <parg3011>
          ^match no)
(<parg3011> ^arg-type object ^importance required ^arg-status abstract ^id <obj-slot3011>)


### +say1 [302]
# Say 'hello' to bob

(@say1 ^handle say1 ^procedural <proc302> ^type action)
(<proc302> ^op_name op_say1
           ^arg1 <parg3021>
           ^arg2 <parg3022>)
(<parg3021> ^arg-type object ^arg-status abstract ^importance required ^id <obj-slot3021>)
(<parg3022> ^arg-type object ^arg-status real ^importance optional ^id <obj-slot3022>)



#!#############################################################################################
#!#############################################################################################
#! Actions involving the Agent's internal state
#! 401-499

### +sense1 [401]

(@sense1 ^handle sense1 ^procedural <proc401> ^item-type action)
(<proc401> ^op_name op_sense1)


### +remember1 [402]
# Remember the current location as the starting location

(@remember1 ^handle remember1 ^procedural <proc402> ^item-type action ^learn-proposal true ^perform once)
(<proc402> ^op_name op_remember1
           ^arg1 <parg4021> ^arg2 <parg4022>)
(<parg4021> ^arg-type object ^importance required ^arg-status real ^id <obj-slot4021>)
(<parg4022> ^arg-type object ^importance required ^arg-status abstract ^id <obj-slot4022>)


### +recall1 [403]
# Recall the soda in a location

(@recall1 ^handle recall1 ^procedural <proc403> ^item-type action ^learn-proposal true ^perform once)
 (<proc403> ^op_name op_recall1
             ^arg1 <parg4031> ^arg2 <parg4032>)
 (<parg4031> ^arg-type object ^importance required ^arg-status real ^id <obj-slot4031>)
 (<parg4032> ^arg-type predicate ^importance required ^arg-status abstract ^id <pred-slot4032> ^2 <obj-slot4032>)


### +think1 [404]
# AM: EDIT: removed the 2nd argument 
# 'Think of a storage location of the soda'
# The soda argument is put under the first as a sub-relation

(@think1 ^handle think1 ^procedural <proc404> ^item-type action ^learn-proposal true ^perform once)
(<proc404> ^op_name op_think1
           ^arg1 <parg4041> ^arg2 <parg4042>)
(<parg4041> ^arg-type predicate ^importance required ^arg-status real ^id <pred-slot4041> ^2 <obj-slot4041>)
(<parg4042> ^arg-type predicate ^importance required ^arg-status abstract ^id <pred-slot4042> ^2 <obj-slot4042>)


### +heard1 [405]

(@heard1 ^handle heard1 ^procedural <proc405> ^type action)
(<proc405> ^op_name op_heard1)


### +wait1 [406]

(@wait1 ^handle wait1 ^procedural <proc406> ^item-type action)
(<proc406> ^op_name op_wait1)


### +check1 [407]

(@check1 ^handle check1 ^procedural <proc407> ^item-type action)
(<proc407> ^op_name op_check1)



#!#############################################################################################
#!#############################################################################################
#! Game Actions
#! 501-599


### +attend1 [501]

(@attend1 ^handle attend1 ^procedural <proc501> ^type action)
(<proc501> ^op_name initiate-attend1)


### +ignore1 [502]

(@ignore1 ^handle ignore1 ^procedural <proc502> ^type action)
(<proc502> ^op_name initiate-ignore1)


### +has1 [503]

(@has1 ^handle has1 ^procedural <proc503> ^type action)
(<proc503> ^op_name initiate-has1)


### +play1 [504]

(@play1 ^handle play1 ^procedural <proc504> ^type action)
(<proc504> ^op_name initiate-play1)


### +win1 [505]

(@win1 ^handle win1 ^procedural <proc505> ^type action)
(<proc505> ^op_name initiate-win1)


### +lose1 [506]

(@lose1 ^handle lose1 ^procedural <proc506> ^type action)
(<proc506> ^op_name initiate-lose1)


### +prefer1 [507]

(@prefer1 ^handle prefer1 ^procedural <proc507> ^type action)
(<proc507> ^op_name initiate-prefer1) 


### +avoid1 [508]

(@avoid1 ^handle avoid1 ^procedural <proc508> ^type action)
(<proc508> ^op_name initiate-avoid1)


### +attack1 [509]

(@attack1 ^handle attack1 ^procedural <proc509> ^type action)
(<proc509> ^op_name initiate-attack)


### +fill1 [510]

(@fill1 ^handle fill1 ^procedural <proc510> ^type action)
(<proc510> ^op_name initiate-fill)


### +load1 [511]

(@load1 ^handle load1 ^procedural <proc511> ^type action)
(<proc511> ^op_name initiate-load)


### +consider1 [512]

(@consider1 ^handle consider1 ^procedural <proc512> ^type action)
(<proc512> ^op_name initiate-consider1) 


### +match1 [513]
(@matches1 ^handle matches1) 


### +cover1 [514]
#(@covers1 ^handle covers1
#         ^tense past)


### +perform1 [515]

(@perform1 ^handle perform1 ^item-type action)

