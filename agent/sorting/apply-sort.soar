sp {sorting*propose*create-topstate-history
   (state <s> ^name sort-blocks
              ^top-state <ts>)
   (<ts> -^block-history)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-topstate-history)
}

sp {sorting*apply*create-topstate-history
   (state <s> ^name sort-blocks
              ^top-state <ts>
              ^operator.name create-topstate-history)
-->
   (<ts> ^block-history <h>)
}

# First update what happened with the last action
sp {sort-blocks*propose*finish*last-action*move
   (state <s> ^name sort-blocks
              ^top-state.block-history <h>
              ^top-state.io.output-link <ol>)
   (<h> ^last-action <a>)
   (<a> ^action-type move)
   (<ol> ^pick-up <pu>)
   (<pu> ^status << success failure >>
        -^sort-handled true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name finish-last-action
        ^command <pu>)
   #(write (crlf) |Handling previous move action|)
}

sp {sort-blocks*propose*finish*last-action*push
   (state <s> ^name sort-blocks
              ^top-state.block-history <h>
              ^top-state.io.output-link <ol>)
   (<h> ^last-action <a>)
   (<a> ^action-type push)
   (<ol> ^push <p>)
   (<p> ^status << success failure >>
       -^sort-handled true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name finish-last-action
        ^command <p>)
   #(write (crlf) |Handling previous push action|)
}

sp {sort-blocks*apply*finish*last-action*success
   (state <s> ^name sort-blocks
              ^top-state.block-history <h>
			  ^operator <o>)
   (<h> ^last-action <a>)
   (<o> ^name finish-last-action
        ^command <cmd>)
   (<cmd> ^status success)
-->
   (<h> ^action <a>
        ^last-action <a> -)
   (<a> ^success true)
   (<cmd> ^sort-handled true)
   #(write (crlf) |Recorded successful action| <a>)
}

sp {sort-blocks*apply*finish*last-action*failure
   (state <s> ^name sort-blocks
              ^top-state.block-history <h>
			  ^operator <o>)
   (<h> ^last-action <a>)
   (<o> ^name finish-last-action
        ^command <cmd>)
   (<cmd> ^status failure
          ^failure-reason <r>)
-->
   (<h> ^action <a>
        ^last-action <a> -)
   (<a> ^failure <r>)
   (<cmd> ^sort-handled true)
   #(write (crlf) |Recorded failed action| <a>)
}

sp {sorting*propose*move-block*blue
   (state <s> ^name sort-blocks
              ^top-state <ts>)
   (<ts> ^world.objects <objs>
         ^block-history <h>)
   (<objs> ^object <ob1>
           ^object <ob2>)
   (<ob1> ^item-type object
         ^predicates <preds>
         ^handle <id>)
   (<preds> ^category block
            ^color blue1)
   (<ob2> ^item-type object
         ^predicates <preds2>
         ^handle <loc>)
   (<preds2> ^category location
            ^color green1)
-->
   (<s> ^operator <o> + =)
   (<o> ^name move-block
        ^block <ob1>
        ^location <ob2>)
}

sp {sorting*propose*move-block*red
   (state <s> ^name sort-blocks
              ^top-state <ts>)
   (<ts> ^world.objects <objs>
         ^block-history <h>)
   (<objs> ^object <ob1>
           ^object <ob2>)
   (<ob1> ^item-type object
         ^predicates <preds>
         ^handle <id>)
   (<preds> ^category block
            ^color red1)
   (<ob2> ^item-type object
         ^predicates <preds2>
         ^handle <loc>)
   (<preds2> ^category location
            ^color yellow1)
-->
   (<s> ^operator <o> + =)
   (<o> ^name move-block
        ^block <ob1>
        ^location <ob2>)
}

sp {sorting*reject*move-block*already-on-location
	(state <s> ^name sort-blocks
               ^operator <o> +
               ^top-state <ts>)
 	(<o> ^name move-block
         ^block <b>
         ^location <loc>)
    (<ts> ^world.predicates <preds>)
    (<preds> ^predicate <p>)
    (<p> ^handle on1
         ^instance <i>)
    (<i> ^1 <b>
         ^2 <loc>)
-->
	(<s> ^operator <o> -)
}