# First get block size from SVS
sp {move-block*propose*get-block-volume
   (state <s> ^name move-block
              ^block <b>
             -^chosen-action
             -^block-volume)
-->
   (<s> ^operator <o> + >)
   (<o> ^name get-block-volume
        ^block <b>)
}

sp {move-block*apply*get-block-volume*extract
   (state <s> ^name move-block
              ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name get-block-volume
        ^block.svs-obj.id <id>)
-->
    (<cmd> ^extract_once <e>)
    (<e> ^type volume
             ^a <nodea>)
   (<nodea> ^type node ^id <id>)
   (<s> ^volume-filter <e>)
}

sp {move-block*apply*get-block-volume*copy-result
   (state <s> ^name move-block
              ^operator.name get-block-volume
              ^volume-filter <f>)
    (<f> ^type volume
         ^a.id <ida>
         ^result.record.value <vol>)
-->
   (<s> ^block-volume <vol>)
}

# Preferences decide which of these happens
sp {move-block*propose*choose-move
   (state <s> ^name move-block
              ^block-volume <v>
              -^chosen-action)
-->
   (<s> ^operator <o> +)
   (<o> ^name choose-move)
}

sp {move-block*propose*choose-push
   (state <s> ^name move-block
              ^block-volume <v>
              -^chosen-action)
-->
   (<s> ^operator <o> +)
   (<o> ^name choose-push)
}

sp {move-block*apply*choose-move
   (state <s> ^name move-block
              ^operator.name choose-move)
-->
   (<s> ^chosen-action move)
}

sp {move-block*apply*choose-push
   (state <s> ^name move-block
              ^operator.name choose-push)
-->
   (<s> ^chosen-action push)
}

# Once moving is chosen
sp {move-block*propose*action-stack*op_move1
   (state <s> ^name move-block
              ^block <b>
              ^location <loc>
              ^chosen-action move)
-->
	(<s> ^operator <o> +)
 	(<o> ^name push-chosen-action
         ^action <a>)
  	(<a> ^name op_move1
         ^action-handle move1
         ^arg1 <arg1>
         ^arg2 <arg2>)
    (<arg1> ^arg-type object
            ^id <b>)
    (<arg2> ^arg-type predicate
            ^handle on1
            ^2 <loc>)
}

# Once pushing is chosen
sp {move-block*propose*action-stack*op_push1
   (state <s> ^name move-block
              ^block <b>
              ^location <loc>
              ^chosen-action push)
-->
	(<s> ^operator <o> +)
 	(<o> ^name push-chosen-action
         ^action <a>)
  	(<a> ^name op_push1
         ^action-handle push1
         ^arg1 <arg1>
         ^arg2 <arg2>)
    (<arg1> ^arg-type object
            ^id <b>)
    (<arg2> ^arg-type predicate
            ^handle on1
            ^2 <loc>)
}

# Valid for either
sp {move-block*apply*action-stack*either-action
   (state <s> ^name move-block
              ^top-state.action-stack.changes <chgs>
              ^operator <o>)
   (<o> ^name push-chosen-action
        ^action <a>)
-->
   (<chgs> ^push <seg>)
   (<seg> ^execution-operator <a>)
}

sp {move-block*apply*action-stack*remove-avoid
   (state <s> ^name move-block
              ^top-state <ts>
              ^operator <o>)
   (<o> ^name push-chosen-action)
   (<ts> ^avoid-pair <p>)
-->
   (<ts> ^avoid-pair <p> -)
}

sp {move-block*apply*store-top-state
   (state <s> ^name move-block
              ^top-state.block-history <h>
              ^block-volume <v>
              ^chosen-action <a>
              ^block.handle <b>
              ^location.handle <loc>)
   (<o> ^name push-chosen-action)
-->
   (<h> ^last-action <l>)
   (<l> ^action-type <a>
        ^block-volume <v>
        ^block <b>
        ^location <loc>)
}

